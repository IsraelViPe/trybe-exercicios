{"ast":null,"code":"var _jsxFileName = \"/home/israel/Documentos/Trybe/trybe-exercicios/Desenvolvimento-Front-end/Bloco-14-React-Testing-Library/dia-01-inroducao-RLT/testes-react/src/components/ValidEmail.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ValidEmail extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.verifyEmail = email => {\n      const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n      return emailRegex.test(email);\n    };\n  }\n\n  render() {\n    const {\n      email\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"emailText\",\n        children: [\" \", `Email: ${email}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.verifyEmail(email) ? 'Email V치lido' : 'Email Inv치lido'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nValidEmail.propTypes = {\n  email: PropTypes.string.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","ValidEmail","verifyEmail","email","emailRegex","test","render","props","propTypes","string","isRequired"],"sources":["/home/israel/Documentos/Trybe/trybe-exercicios/Desenvolvimento-Front-end/Bloco-14-React-Testing-Library/dia-01-inroducao-RLT/testes-react/src/components/ValidEmail.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class ValidEmail extends Component {\n\n    verifyEmail = (email) => {\n        const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n        return emailRegex.test(email);\n    }\n\n\n  render() {\n    const {email} = this.props;\n    return (\n      <div >\n        <h2 data-testid=\"emailText\"> {`Email: ${email}`}</h2>\n        <h3>{this.verifyEmail(email) ? 'Email V치lido': 'Email Inv치lido'}</h3>\n      </div>\n    )\n  }\n}\n\nValidEmail.propTypes = {\n    email: PropTypes.string.isRequired,\n};"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;EAAA;IAAA;;IAAA,KAE9CG,WAF8C,GAE/BC,KAAD,IAAW;MACrB,MAAMC,UAAU,GAAG,yCAAnB;MACA,OAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;IACH,CAL6C;EAAA;;EAQhDG,MAAM,GAAG;IACP,MAAM;MAACH;IAAD,IAAU,KAAKI,KAArB;IACA,oBACE;MAAA,wBACE;QAAI,eAAY,WAAhB;QAAA,gBAA+B,UAASJ,KAAM,EAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAK,KAAKD,WAAL,CAAiBC,KAAjB,IAA0B,cAA1B,GAA0C;MAA/C;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAhB+C;AAmBlDF,UAAU,CAACO,SAAX,GAAuB;EACnBL,KAAK,EAAEH,SAAS,CAACS,MAAV,CAAiBC;AADL,CAAvB"},"metadata":{},"sourceType":"module"}