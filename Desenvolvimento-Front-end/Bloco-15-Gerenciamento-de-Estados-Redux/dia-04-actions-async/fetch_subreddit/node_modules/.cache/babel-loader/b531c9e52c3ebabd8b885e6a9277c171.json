{"ast":null,"code":"var _jsxFileName = \"/home/israel/Documentos/Trybe/trybe-exercicios/Desenvolvimento-Front-end/Bloco-15-Gerenciamento-de-Estados-Redux/dia-04-actions-async/fetch_subreddit/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRedditAPI } from './redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedTheme: '',\n      loading: false\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      const {\n        dispatch\n      } = this.props;\n      this.setState({\n        selectedTheme: value,\n        loading: true\n      }, () => {\n        const {\n          selectedTheme\n        } = this.state;\n        dispatch(fetchRedditAPI(selectedTheme));\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedTheme,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Tema Selecionado : \", selectedTheme, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.handleChange,\n        name: \"selectedtheme\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"reactjs\",\n          children: \"reactjs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"frontend\",\n          children: \"frontend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Atualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  subredditList: state.reducer.subreddit,\n  errorMessage: state.reducer.error\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"names":["React","Component","connect","fetchRedditAPI","App","state","selectedTheme","loading","handleChange","target","value","dispatch","props","setState","render","mapStateToProps","subredditList","reducer","subreddit","errorMessage","error"],"sources":["/home/israel/Documentos/Trybe/trybe-exercicios/Desenvolvimento-Front-end/Bloco-15-Gerenciamento-de-Estados-Redux/dia-04-actions-async/fetch_subreddit/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchRedditAPI } from './redux/actions'\n\nexport class App extends Component {\n  state = {\n    selectedTheme : '',\n    loading: false,\n  }\n  handleChange = ({target:{value}}) => {\n    const { dispatch } = this.props;\n     this.setState({\n      selectedTheme: value,\n      loading: true,\n     }, () => {\n      const { selectedTheme } = this.state;\n      dispatch(fetchRedditAPI(selectedTheme))\n      this.setState({loading: false})\n     }) \n  }\n  render() {\n    const { selectedTheme, loading } = this.state;\n    \n    return (\n      <div>\n        <h1>Tema Selecionado : { selectedTheme } </h1>\n        <select \n        onChange={ this.handleChange}\n        name='selectedtheme'>\n          <option value=\"reactjs\">reactjs</option>\n          <option value=\"frontend\">frontend</option>\n        </select>\n        <button>Atualizar</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  subredditList: state.reducer.subreddit,\n  errorMessage: state.reducer.error\n})\n\nexport default connect (mapStateToProps)(App)"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACjCI,KADiC,GACzB;MACNC,aAAa,EAAG,EADV;MAENC,OAAO,EAAE;IAFH,CADyB;;IAAA,KAKjCC,YALiC,GAKlB,QAAsB;MAAA,IAArB;QAACC,MAAM,EAAC;UAACC;QAAD;MAAR,CAAqB;MACnC,MAAM;QAAEC;MAAF,IAAe,KAAKC,KAA1B;MACC,KAAKC,QAAL,CAAc;QACbP,aAAa,EAAEI,KADF;QAEbH,OAAO,EAAE;MAFI,CAAd,EAGG,MAAM;QACR,MAAM;UAAED;QAAF,IAAoB,KAAKD,KAA/B;QACAM,QAAQ,CAACR,cAAc,CAACG,aAAD,CAAf,CAAR;QACA,KAAKO,QAAL,CAAc;UAACN,OAAO,EAAE;QAAV,CAAd;MACA,CAPD;IAQF,CAfgC;EAAA;;EAgBjCO,MAAM,GAAG;IACP,MAAM;MAAER,aAAF;MAAiBC;IAAjB,IAA6B,KAAKF,KAAxC;IAEA,oBACE;MAAA,wBACE;QAAA,kCAAyBC,aAAzB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,QAAQ,EAAG,KAAKE,YADhB;QAEA,IAAI,EAAC,eAFL;QAAA,wBAGE;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAQ,KAAK,EAAC,UAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AA/BgC;;AAkCnC,MAAMO,eAAe,GAAIV,KAAD,KAAY;EAClCW,aAAa,EAAEX,KAAK,CAACY,OAAN,CAAcC,SADK;EAElCC,YAAY,EAAEd,KAAK,CAACY,OAAN,CAAcG;AAFM,CAAZ,CAAxB;;AAKA,eAAelB,OAAO,CAAEa,eAAF,CAAP,CAA0BX,GAA1B,CAAf"},"metadata":{},"sourceType":"module"}